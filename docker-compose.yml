services:
  # Database Service - MySQL
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: userDB
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - microservices-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - USER_SERVICE_URL=http://user-service:3001
      - DOCUMENTS_SERVICE_URL=http://document-service:3002
      - INJECTION_SERVICE_URL=http://ingestion-service:3003
      - DATABASE_URL=mysql://root:rootpass@mysql:3306/userDB
    depends_on:
      - mysql
      - redis
    networks:
      - microservices-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./user-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://root:rootpass@mysql:3306/userDB
    depends_on:
      - mysql
      - redis
    networks:
      - microservices-network

  document-service:
    build:
      context: ./document-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./document-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://root:rootpass@mysql:3306/userDB
    depends_on:
      - mysql
      - redis
    networks:
      - microservices-network

  ingestion-service:
    build:
      context: ./ingestion-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    volumes:
      - ./ingestion-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mysql://root:rootpass@mysql:3306/userDB
    depends_on:
      - mysql
      - redis
    networks:
      - microservices-network

  angular-app:
    build:
      context: ./role-based-dashboard
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./role-based-dashboard:/app
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  mysql_dev_data:
  redis_dev_data:


 ## docker-compose -f docker-compose.yml up --build